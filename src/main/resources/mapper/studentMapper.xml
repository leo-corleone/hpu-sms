<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
 PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 
<mapper namespace="com.sms.mapper.StudentMapper">
 
    <!-- 基本信息查询 -->
    <select id="queryOneStudentBasicInforById" parameterType="Integer" resultMap="Student_resultMap">
       select id , name , gender , birthday , address , remark ,privilege from student where id = #{id}
    </select>
 
     <!-- 登陆查询只需要 显示这些字段 -->
    <select id="queryOneStudentByLogin" parameterType="Student" resultType="Student">
        select id , name , loginname , password , privilege from student where loginname = #{loginname} and password = #{password} and state = 'active'
    </select>
    
    <!-- 查询一个学生的全部信息  用于管理界面的展示 -->
    <select id="queryOneStudentALLInforById" parameterType="Integer" resultMap="StudentALLInfor_resultMap">
          select * from student where id = #{id}
    </select>      
    
    <resultMap type="Student" id="StudentALLInfor_resultMap">  
       <result property="birthday" column="birthday" javaType="Date" jdbcType="DATE"/>
       <association property="clacc" column="class" javaType="Clazz" jdbcType="VARCHAR"  select="com.sms.mapper.ClassMapper.queryOneClassByName">
       </association> 
    </resultMap>
          
    <select id="queryOneStudentById" parameterType="Integer" resultMap="Student_resultMap">
          select id , name , gender , age , birthday , address , class from student where id = #{id}
    </select>
    
    <select id="queryStudentsByClass" parameterType="org.sms.util.QueryUtil" resultMap="Student_resultMap">
          select id , name , gender , age , birthday , address , remark from student where class = #{keyword}
          <if test="sort != null">
               order by ${sort} ${order}
          </if>
    </select>
    
    <select id="queryAllStudents" parameterType="org.sms.util.QueryUtil" resultMap="Student_resultMap">
          select id , name , gender , age , birthday , address , class  from student 
         where id in (select id from student
          <where>     
              <if test="keyword != null and keyword != ''">
                    name like '%${keyword}%'    
                or  age like '%${keyword}%' 
                or  gender like '%${keyword}%'
                or  address like '%${keyword}%'
                or  class like '%${keyword}%'
             </if>
          </where>
          ) and state = 'active'       
             <if test="sort != null">
               order by ${sort} ${order}
             </if>              
    </select>    
        
    <resultMap type="Student" id="Student_resultMap">
       <id property="id" column="id"/>
       <result property="name" column="name"/>
       <result property="gender" column="gender"/>
       <result property="age" column="age"/>
       <result property="birthday" column="birthday" javaType="Date" jdbcType="DATE"/>
       <result property="address" column="address"/>
       <result property="clazz" column="class"/>
       <result property="remark" column="remark"/>
       <association property="clacc" column="class" javaType="Clazz" jdbcType="VARCHAR"  select="com.sms.mapper.ClassMapper.queryOneClassByName">
       </association>
    </resultMap>
 
    <select id="queryStudentIconById" parameterType="Integer" resultMap="student_resultMap_icon">
       select  icon from student where id = #{id}
    </select>
    
    <resultMap type="Student" id="student_resultMap_icon">
       <result property="icon" column="icon" javaType="byte[]" jdbcType="BLOB" typeHandler="org.apache.ibatis.type.BlobTypeHandler"/>
    </resultMap>
    
    
    <!-- 查询密码是否匹配 -->
    <select id="queryStudentMatchPwdById" parameterType="Student" resultType="Integer">
      select count(1) from student where id = #{id} and password = #{password}
    </select>
    
    
    <!-- 修改密码 -->
    <update id="updateStudentPwdById" parameterType="Student">
      update student set password = #{newpwd} where id = #{id} 
    </update>
    
    
    <!-- 更新操作 -->
    <update id="updateStudentById" parameterType="Student">
        update  student 
        <set>
           gender = #{gender} 
            , remark = #{remark}
           <if test="birthday != null">
           , birthday = #{birthday , javaType=Date  , jdbcType=DATE} 
           </if>
           <if test="address != null and address != ''">
            , address = #{address}
           </if>
           <if test="name != null and name != ''">
           ,  name = #{name}
           </if>
           <if test="clazz != null and clazz != ''">
            , class = #{clazz}
           </if>       
           <if test="icon != null">
            , icon = #{icon , javaType=byte[] , jdbcType=BLOB , typeHandler=org.apache.ibatis.type.BlobTypeHandler}
           </if>           
        </set>
        <where>
          id = #{id}
        </where>
    </update>
    
    <!-- 删除学生数据  其实是将学生 state字段修改为 inactive -->
    <update id="deleteOneStudentByIdWithUpdate" parameterType="Integer">
       update student set state = 'inactive' where id = #{id}
    </update>
    
    <!-- 删除多个学生数据  其实是将学生 state字段修改为 inactive -->
    <update id="deleteBatchStudentByIdWithUpdate" parameterType="Object[]">
       <if test="array!=null and array.length > 0">
              update student set state = 'inactive'
              <where>
                <foreach collection="array" open="id in (" close=")" separator="," item="id">
                   #{id}
                </foreach>
              </where>
       </if>
    </update>
    
    
    <!-- 插入操作 -->
     <insert id="insertOneStudent" parameterType="Student" useGeneratedKeys="true" keyProperty="id">
        <choose>
           <when test="remark !='' and remark != null">
               insert into student(name,gender,birthday,address,icon,class,remark) 
               value(#{name} ,#{gender},#{birthday,javaType=Date,jdbcType=DATE},#{address},#{icon,javaType=byte[],jdbcType=BLOB,typeHandler=org.apache.ibatis.type.BlobTypeHandler},#{clazz},#{remark})
           </when>
           <otherwise>
               insert into student(name,gender,birthday,address,icon,class) 
               value(#{name} ,#{gender},#{birthday,javaType=Date,jdbcType=DATE},#{address},#{icon,javaType=byte[],jdbcType=BLOB,typeHandler=org.apache.ibatis.type.BlobTypeHandler},#{clazz})
           </otherwise>
        </choose>
      </insert>
   
    <!-- 删除操作 -->
    <delete id="deleteStudentById" parameterType="Integer">
       delete from student where id = #{id}
    </delete>
    
</mapper>
